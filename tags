!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BUFFER_SIZE	srcs/here_doc_input/get_next_line/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
CC	Makefile	/^CC		:=	gcc$/;"	m
CC	libft/Makefile	/^CC		= gcc$/;"	m
CC	srcs/executor/Makefile	/^CC		=	gcc$/;"	m
CC	srcs/here_doc_input/Makefile	/^CC		=	gcc$/;"	m
CC	srcs/lexer_and_parser/Makefile	/^CC		:=	gcc #-fsanitize=address -g3$/;"	m
CC	srcs/signal/Makefile	/^CC		= cc$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS	= -Wall -Wextra -Werror$/;"	m
CFLAGS	srcs/executor/Makefile	/^CFLAGS	=	-Wall -Wextra -Werror$/;"	m
CFLAGS	srcs/here_doc_input/Makefile	/^CFLAGS	=	-Wall -Wextra -Werror$/;"	m
CFLAGS	srcs/signal/Makefile	/^CFLAGS	= -Wall -Wextra -Werror$/;"	m
COMMAND	includes/minishell.h	/^# define COMMAND /;"	d
DEBUG_FLAGS	Makefile	/^DEBUG_FLAGS	:= -fsanitize=address -g3$/;"	m
EXESRCS	srcs/executor/Makefile	/^EXESRCS	=	cd.c\\$/;"	m
EXE_CMD_ARC	Makefile	/^EXE_CMD_ARC		=	.\/srcs\/executor\/executor$/;"	m
EXE_CMD_PATH	Makefile	/^EXE_CMD_PATH	=	.\/srcs\/executor\/$/;"	m
EXINCDIR	srcs/executor/Makefile	/^EXINCDIR	:= -I.\/$/;"	m
FD_MAX	pipex/pipex.h	/^# define FD_MAX /;"	d
FD_MAX	srcs/executor/executor.h	/^# define FD_MAX /;"	d
GET_NEXT_LINE_H	srcs/here_doc_input/get_next_line/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GNLSRCS	srcs/here_doc_input/Makefile	/^GNLSRCS =	get_next_line.c\\$/;"	m
HDIINCDIR	srcs/here_doc_input/Makefile	/^HDIINCDIR	:= -I.\/$/;"	m
HDISRCS	srcs/here_doc_input/Makefile	/^HDISRCS	=	here_doc_input.c$/;"	m
HDI_PA_ARC	Makefile	/^HDI_PA_ARC		=	.\/srcs\/here_doc_input\/here_doc_input$/;"	m
HDI_PA_PATH	Makefile	/^HDI_PA_PATH		=	.\/srcs\/here_doc_input\/$/;"	m
HERE_DOC_INPUT_H	srcs/here_doc_input/here_doc_input.h	/^# define HERE_DOC_INPUT_H$/;"	d
INCDIR	Makefile	/^INCDIR	:= -I.\/includes$/;"	m
IPCSRCS	srcs/executor/Makefile	/^IPCSRCS =	ipc_table.c\\$/;"	m
LEFT	includes/minishell.h	/^# define LEFT /;"	d
LEXER_AND_PARSER_H	srcs/lexer_and_parser/lexer_and_parser.h	/^# define LEXER_AND_PARSER_H$/;"	d
LE_PA_ARC	Makefile	/^LE_PA_ARC		=	.\/srcs\/lexer_and_parser\/lexer_and_parser$/;"	m
LE_PA_PATH	Makefile	/^LE_PA_PATH		=	.\/srcs\/lexer_and_parser\/$/;"	m
LIBFT	srcs/lexer_and_parser/Makefile	/^LIBFT	:=	..\/..\/libft\/libft.a$/;"	m
LIBFT_ARC	Makefile	/^LIBFT_ARC		=	-Llibft -lft$/;"	m
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
LIBFT_PATH	Makefile	/^LIBFT_PATH		=	.\/libft\/$/;"	m
LIBFT_PATH	srcs/lexer_and_parser/Makefile	/^LIBFT_PATH	=	..\/..\/libft\/$/;"	m
LPINCDIR	srcs/lexer_and_parser/Makefile	/^LPINCDIR	:= -I.\/$/;"	m
MINISHELL_H	includes/minishell.h	/^# define MINISHELL_H$/;"	d
MSINCDIR	srcs/executor/Makefile	/^MSINCDIR	:= -I..\/..\/includes$/;"	m
MSINCDIR	srcs/here_doc_input/Makefile	/^MSINCDIR	:= -I..\/..\/includes$/;"	m
MSINCDIR	srcs/lexer_and_parser/Makefile	/^MSINCDIR	:= -I..\/..\/includes$/;"	m
MY_CD	srcs/executor/executor.h	/^# define MY_CD /;"	d
MY_ECHO	srcs/executor/executor.h	/^# define MY_ECHO /;"	d
MY_ENV	srcs/executor/executor.h	/^# define MY_ENV /;"	d
MY_EXIT	srcs/executor/executor.h	/^# define MY_EXIT /;"	d
MY_EXPORT	srcs/executor/executor.h	/^# define MY_EXPORT /;"	d
MY_PWD	srcs/executor/executor.h	/^# define MY_PWD /;"	d
MY_UNSET	srcs/executor/executor.h	/^# define MY_UNSET /;"	d
NAME	Makefile	/^NAME	:=	minishell$/;"	m
NAME	libft/Makefile	/^NAME	= libft.a$/;"	m
NAME	srcs/executor/Makefile	/^NAME	=	executor$/;"	m
NAME	srcs/here_doc_input/Makefile	/^NAME	=	here_doc_input$/;"	m
NAME	srcs/lexer_and_parser/Makefile	/^NAME	:=	lexer_and_parser$/;"	m
NAME	srcs/signal/Makefile	/^NAME	= libsignal.a$/;"	m
ND_ADD	srcs/lexer_and_parser/tmp/calculator.c	/^  ND_ADD, \/\/ +$/;"	e	enum:__anon1	file:
ND_DIV	srcs/lexer_and_parser/tmp/calculator.c	/^  ND_DIV, \/\/ \/$/;"	e	enum:__anon1	file:
ND_MUL	srcs/lexer_and_parser/tmp/calculator.c	/^  ND_MUL, \/\/ *$/;"	e	enum:__anon1	file:
ND_NUM	srcs/lexer_and_parser/tmp/calculator.c	/^  ND_NUM, \/\/ 整数$/;"	e	enum:__anon1	file:
ND_SUB	srcs/lexer_and_parser/tmp/calculator.c	/^  ND_SUB, \/\/ -$/;"	e	enum:__anon1	file:
NOFILE	pipex/pipex.h	/^# define NOFILE /;"	d
NOFILE	srcs/executor/executor.h	/^# define NOFILE /;"	d
NO_BUILTIN_FLAGS	Makefile	/^NO_BUILTIN_FLAGS	:=	-fno-builtin$/;"	m
Node	srcs/lexer_and_parser/tmp/calculator.c	/^struct Node {$/;"	s	file:
Node	srcs/lexer_and_parser/tmp/calculator.c	/^typedef struct Node Node;$/;"	t	typeref:struct:Node	file:
NodeKind	srcs/lexer_and_parser/tmp/calculator.c	/^} NodeKind;$/;"	t	typeref:enum:__anon1	file:
OBJDIR	Makefile	/^OBJDIR	:=	.\/objs$/;"	m
OBJDIR	srcs/executor/Makefile	/^OBJDIR	:=	.\/objs$/;"	m
OBJDIR	srcs/here_doc_input/Makefile	/^OBJDIR	=	.\/objs$/;"	m
OBJDIR	srcs/lexer_and_parser/Makefile	/^OBJDIR	:=	.\/objs$/;"	m
OBJS	Makefile	/^OBJS := $(addprefix $(OBJDIR)\/, $(SRCS:.c=.o))$/;"	m
OBJS	libft/Makefile	/^OBJS    = $(SRCS:.c=.o)$/;"	m
OBJS	srcs/executor/Makefile	/^OBJS := $(addprefix $(OBJDIR)\/, $(SRCS:.c=.o))$/;"	m
OBJS	srcs/here_doc_input/Makefile	/^OBJS	:=	$(addprefix $(OBJDIR)\/, $(SRCS:.c=.o))$/;"	m
OBJS	srcs/lexer_and_parser/Makefile	/^OBJS	:= $(addprefix $(OBJDIR)\/, $(SRCS:.c=.o))$/;"	m
OBJS	srcs/signal/Makefile	/^OBJS	= $(SRCS:.c=.o)$/;"	m
OBJS_B	libft/Makefile	/^OBJS_B  = $(SRCS_B:.c=.o)$/;"	m
PATH_PREFIX	pipex/pipex.h	/^# define PATH_PREFIX /;"	d
PATH_PREFIX	srcs/executor/executor.h	/^# define PATH_PREFIX /;"	d
PIPE	includes/minishell.h	/^# define PIPE /;"	d
PIPEIN	pipex/pipex.h	/^# define PIPEIN /;"	d
PIPEIN	srcs/executor/executor.h	/^# define PIPEIN /;"	d
PIPEOUT	pipex/pipex.h	/^# define PIPEOUT /;"	d
PIPEOUT	srcs/executor/executor.h	/^# define PIPEOUT /;"	d
PIPEX_H	pipex/pipex.h	/^# define PIPEX_H$/;"	d
RIGHT	includes/minishell.h	/^# define RIGHT /;"	d
RL_ARC	Makefile	/^RL_ARC	:=	-L$(RL_PATH)\/lib -L$(shell brew --prefix readline)\/lib -lreadline -lhistory$/;"	m
RL_INCDIR	Makefile	/^RL_INCDIR	:=	-I$(RL_PATH)\/include -I $(shell brew --prefix readline)\/include$/;"	m
RL_MSG	includes/minishell.h	/^# define RL_MSG	/;"	d
RL_PATH	Makefile	/^RL_PATH	:=\/usr\/local\/opt\/readline$/;"	m
RM	Makefile	/^RM		:=	rm -f$/;"	m
RM	libft/Makefile	/^RM		= rm -rf$/;"	m
RM	srcs/executor/Makefile	/^RM		=	rm -rf$/;"	m
RM	srcs/here_doc_input/Makefile	/^RM		=	rm -rf$/;"	m
RM	srcs/lexer_and_parser/Makefile	/^RM		:= rm -f$/;"	m
RM	srcs/signal/Makefile	/^RM		= rm -rf$/;"	m
SBSRCS	srcs/executor/Makefile	/^SBSRCS	=	single_builtin_executor.c\\$/;"	m
SIGNAL_ARC	Makefile	/^SIGNAL_ARC		=	-L.\/srcs\/signal -lsignal$/;"	m
SIGNAL_H	srcs/signal/signal.h	/^# define SIGNAL_H$/;"	d
SIGNAL_PATH	Makefile	/^SIGNAL_PATH		=	.\/srcs\/signal\/$/;"	m
SRCS	Makefile	/^SRCS	:=	main.c\\$/;"	m
SRCS	libft/Makefile	/^SRCS    = ft_atoi.c ft_bzero.c ft_calloc.c ft_isalnum.c ft_isalpha.c ft_isascii.c\\$/;"	m
SRCS	srcs/executor/Makefile	/^SRCS	=	$(IPCSRCS) $(SBSRCS) $(EXESRCS)$/;"	m
SRCS	srcs/here_doc_input/Makefile	/^SRCS	=	$(HDISRCS) $(GNLSRCS)$/;"	m
SRCS	srcs/lexer_and_parser/Makefile	/^SRCS	:=	lexer_and_parser_main.c \\$/;"	m
SRCS	srcs/signal/Makefile	/^SRCS	= signal.c$/;"	m
SRCS_B	libft/Makefile	/^SRCS_B  =  ft_lstnew.c ft_lstadd_front.c ft_lstsize.c ft_lstlast.c ft_lstadd_back.c\\$/;"	m
STDERR	pipex/pipex.h	/^# define STDERR /;"	d
STDERR	srcs/executor/executor.h	/^# define STDERR /;"	d
STDIN	pipex/pipex.h	/^# define STDIN /;"	d
STDIN	srcs/executor/executor.h	/^# define STDIN /;"	d
STDOUT	pipex/pipex.h	/^# define STDOUT /;"	d
STDOUT	srcs/executor/executor.h	/^# define STDOUT /;"	d
VPATH	Makefile	/^VPATH	:=	srcs:srcs\/expander:srcs\/executor:srcs\/utils:srcs\/here_doc_input$/;"	m
VPATH	srcs/executor/Makefile	/^VPATH   :=  exe_cmd:ipc_with_pipe:single_builtin$/;"	m
VPATH	srcs/here_doc_input/Makefile	/^VPATH	=	get_next_line$/;"	m
VPATH	srcs/lexer_and_parser/Makefile	/^VPATH   :=  tokenize:split_by_pipe:make_ast:debug_utils:..\/utils$/;"	m
abs_rel_exe	srcs/executor/exe_cmd/no_builtin.c	/^static int	abs_rel_exe(char **str)$/;"	f	file:
according_to_cmd	srcs/executor/single_builtin/single_builtin_executor.c	/^static void	according_to_cmd(int cmd_type, \\$/;"	f	file:
add_oldpwd	srcs/executor/exe_cmd/envlist.c	/^static void	add_oldpwd(t_envlist **envlist)$/;"	f	file:
all_cmd_line	srcs/lexer_and_parser/lexer_and_parser.h	/^	char		***all_cmd_line;$/;"	m	struct:s_make_ast_info
argc	pipex/pipex.h	/^	int		argc;$/;"	m	struct:s_info
argv	pipex/pipex.h	/^	char	**argv;$/;"	m	struct:s_info
bubble_sort	srcs/executor/exe_cmd/export.c	/^static char	**bubble_sort(char **darray)$/;"	f	file:
buffer	includes/minishell.h	/^	char			*buffer;$/;"	m	struct:s_ms_ast
buffer	srcs/executor/executor.h	/^	char	*buffer;\/\/executor_main51ではmallocしてないためfreeするとまずいように見える$/;"	m	struct:s_heredoc_info
can_export	srcs/executor/exe_cmd/export.c	/^static bool	can_export(char *str)$/;"	f	file:
case_of_command_not_found	srcs/executor/ipc_with_pipe/ipc_executor.c	/^int	case_of_command_not_found(char *cmd_name)$/;"	f
check_arg_value	srcs/executor/exe_cmd/exit.c	/^static bool	check_arg_value(char *str)$/;"	f	file:
child_exe	pipex/execute_ipc.c	/^static void	child_exe(t_info *info, int cmd_index)$/;"	f	file:
child_exe	srcs/executor/ipc_with_pipe/ipc_executor.c	/^void	child_exe(t_info *info, t_process_info *proc_info, t_ms_ast *ast_node)$/;"	f
child_exe	srcs/lexer_and_parser/tmp/T_ipc_executor.c	/^void	child_exe(t_info *info, t_process_info *p_info)$/;"	f
close_func	pipex/execute_ipc2.c	/^void	close_func(t_info *info, int filefd, int cmd_index)$/;"	f
close_func	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^void	close_func(t_info *info, t_process_info *proc_info)$/;"	f
close_func	srcs/lexer_and_parser/tmp/T_ipc_executor2.c	/^void	close_func(t_info *info, t_process_info *p_info, int filefd)$/;"	f
cmd	pipex/pipex.h	/^	char	***cmd;$/;"	m	struct:s_info
cmd	srcs/executor/executor.h	/^	char			**cmd;$/;"	m	struct:s_process_info
cmd_full_path	pipex/pipex.h	/^	char	**cmd_full_path;$/;"	m	struct:s_info
cmd_full_path	srcs/executor/executor.h	/^	char			*cmd_full_path;$/;"	m	struct:s_process_info
cmd_info_list	includes/minishell.h	/^	t_list			*cmd_info_list;$/;"	m	struct:s_ms_ast
cmd_list	srcs/executor/executor.h	/^	t_list			*cmd_list;\/\/これはft_lstnewでmallocされていないためms_astをfreeするならこれはfreeすべきでない$/;"	m	struct:s_process_info
cmd_seaching	pipex/cmd_full_path.c	/^static bool	cmd_seaching(t_info *info, char **all_paths, int cmd_idx)$/;"	f	file:
cmd_seaching	srcs/executor/ipc_with_pipe/get_cmd_path.c	/^static bool	cmd_seaching(t_info *info, t_process_info *p_info, char **all_paths)$/;"	f	file:
command_not_found	srcs/executor/exe_cmd/no_builtin.c	/^static void	command_not_found(char *str)$/;"	f	file:
consume	srcs/lexer_and_parser/tmp/calculator.c	/^bool consume(char op) {$/;"	f
content	libft/libft.h	/^	char			*content;$/;"	m	struct:s_list
convert_to_cmd_full_path	pipex/cmd_full_path.c	/^void	convert_to_cmd_full_path(t_info *info, int cmd_index)$/;"	f
convert_to_cmd_full_path	srcs/executor/ipc_with_pipe/get_cmd_path.c	/^void	convert_to_cmd_full_path(t_info *info, t_process_info *p_info)$/;"	f
count_arrays	libft/ft_split.c	/^static size_t	count_arrays(char	const *s, char c)$/;"	f	file:
count_nb_digit	libft/ft_itoa.c	/^static size_t	count_nb_digit(long long_nbr, int sign)$/;"	f	file:
crawl_ast	srcs/expander/expander_main.c	/^static void crawl_ast(t_ms_ast **ms_ast)$/;"	f	file:
crawl_ast	srcs/here_doc_input/here_doc_input.c	/^static void crawl_ast(t_ms_ast *ms_ast)$/;"	f	file:
crawl_ast	srcs/lexer_and_parser/debug_utils/print_data.c	/^static void crawl_ast(t_ms_ast *ms_ast)$/;"	f	file:
crawl_ast_in_ipc_table	srcs/executor/ipc_with_pipe/ipc_table.c	/^static void crawl_ast_in_ipc_table(t_ms_ast *ms_ast, t_info *info, int i)$/;"	f	file:
create_env_arr	srcs/executor/ipc_with_pipe/ipc_table.c	/^char	**create_env_arr(t_envlist *envlist)$/;"	f
create_envlist	srcs/executor/exe_cmd/envlist.c	/^t_envlist	*create_envlist(char **envp)$/;"	f
delimiter	includes/minishell.h	/^	char			*delimiter;$/;"	m	struct:s_ms_ast
delimiter	srcs/executor/executor.h	/^	char	*delimiter;$/;"	m	struct:s_heredoc_info
deploy_process	pipex/execute_ipc.c	/^static void	deploy_process(t_info *info)$/;"	f	file:
double_redirect_section	srcs/lexer_and_parser/tokenize/tokens_count.c	/^static	int	double_redirect_section(t_tokenize_info *t_info)$/;"	f	file:
double_redirect_separator	srcs/lexer_and_parser/tokenize/separator.c	/^bool	double_redirect_separator(t_tokenize_info *t_info)$/;"	f
dup2_func	pipex/execute_ipc2.c	/^void	dup2_func(t_info *info, int filefd, int cmd_index)$/;"	f
dup2_func	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^void	dup2_func(t_info *info, t_process_info *proc_info)$/;"	f
dup2_func	srcs/lexer_and_parser/tmp/T_ipc_executor2.c	/^void	dup2_func(t_info *info, t_process_info *p_info, int filefd)$/;"	f
dup_and_close	srcs/executor/single_builtin/single_builtin_redirection.c	/^void	dup_and_close(t_process_info *proc_info)$/;"	f
echo_main	srcs/executor/exe_cmd/echo.c	/^static int	echo_main(char **str)$/;"	f	file:
echo_main	tester_dir/current_echo.c	/^static int	echo_main(char **str)$/;"	f	file:
echo_main	tester_dir/origin_echo.c	/^static int	echo_main(char **str)$/;"	f	file:
envlist	includes/minishell.h	/^	t_envlist	*envlist;\/\/malloc$/;"	m	struct:s_info
envlist_clear	srcs/executor/ipc_with_pipe/ipc_table.c	/^void	envlist_clear(t_envlist *stack)$/;"	f
envlist_len	srcs/executor/ipc_with_pipe/ipc_table.c	/^size_t	envlist_len(t_envlist *envlist)$/;"	f
envp	includes/minishell.h	/^	char		**envp;\/\/no$/;"	m	struct:s_info
envp	pipex/pipex.h	/^	char	**envp;$/;"	m	struct:s_info
eol_sensor	srcs/here_doc_input/get_next_line/get_next_line.c	/^static int	eol_sensor(char *str)$/;"	f	file:
error_clean	srcs/here_doc_input/get_next_line/get_next_line_utils.c	/^void	*error_clean(char *s1, char *s2)$/;"	f
error_handler	pipex/error_handler.c	/^int	error_handler(void)$/;"	f
error_occuration_at_make_ast	srcs/lexer_and_parser/make_ast/make_ast_utils.c	/^void	error_occuration_at_make_ast(t_make_ast_info *ma_info, \\$/;"	f
error_occuration_at_sbp	srcs/lexer_and_parser/split_by_pipe/split_by_pipe.c	/^void	error_occuration_at_sbp(char **tokenized_line, char ***result)$/;"	f
error_occuration_at_tokenize	srcs/lexer_and_parser/tokenize/error_tokenize.c	/^void	*error_occuration_at_tokenize(t_tokenize_info **t_info, bool is_syntax)$/;"	f
error_status	pipex/pipex.h	/^	int		error_status;$/;"	m	struct:s_info
exe_no_builtin_cmd	srcs/executor/exe_cmd/no_builtin.c	/^int	exe_no_builtin_cmd(char **str, t_envlist *envlist)$/;"	f
executor	srcs/executor/executor_main.c	/^void	executor(t_ms_ast *ms_ast, t_envlist **envlist, size_t process_cnt)$/;"	f
executor_h	srcs/executor/executor.h	/^# define executor_h$/;"	d
expander	srcs/expander/expander_main.c	/^void	expander(t_ms_ast **ms_ast, t_envlist *envlist)$/;"	f
expr	srcs/lexer_and_parser/tmp/calculator.c	/^Node *expr() {$/;"	f
file	pipex/pipex.h	/^	char	*file;$/;"	m	struct:s_info
file_info	srcs/executor/executor.h	/^	t_file_info		*file_info;\/\/free$/;"	m	struct:s_process_info
fir	srcs/lexer_and_parser/lexer_and_parser.h	/^	int			*fir;$/;"	m	struct:s_make_ast_info
first_cmd_index	pipex/pipex.h	/^	int		first_cmd_index;$/;"	m	struct:s_info
free_2arr	pipex/free.c	/^void	free_2arr(void ***arr)$/;"	f
free_2d_line	srcs/lexer_and_parser/split_by_pipe/split_by_pipe.c	/^void	free_2d_line(char **two_d_line)$/;"	f
free_2darray	srcs/executor/executor_utils.c	/^void	free_2darray(char **darray)$/;"	f
free_3arr	pipex/free.c	/^static void	free_3arr(void ****arr)$/;"	f	file:
free_3d_line	srcs/lexer_and_parser/split_by_pipe/split_by_pipe.c	/^void	free_3d_line(char ***three_d_line)$/;"	f
free_all_info	pipex/free.c	/^int	free_all_info(t_info *info, bool is_error, int error_status)$/;"	f
free_ast	srcs/utils/free_ast.c	/^void	free_ast(t_ms_ast *ms_ast)$/;"	f
free_ast_without_top	srcs/utils/free_ast.c	/^static void	free_ast_without_top(t_ms_ast *ms_ast)$/;"	f	file:
free_darray	srcs/executor/exe_cmd/export.c	/^static void	free_darray(char **darray)$/;"	f	file:
free_darray	srcs/executor/ipc_with_pipe/ipc_table.c	/^void	free_darray(void **array)$/;"	f
free_double_arr	srcs/executor/ipc_with_pipe/ipc_table.c	/^void	free_double_arr(void **d_arr)$/;"	f
free_error	libft/ft_split.c	/^static char	**free_error(char **words)$/;"	f	file:
free_info	pipex/free.c	/^static void	free_info(t_info *info)$/;"	f	file:
free_info	srcs/executor/ipc_with_pipe/ipc_table.c	/^void	free_info(t_info **info)$/;"	f
free_list	srcs/executor/exe_cmd/envlist.c	/^void	free_list(t_envlist *list)$/;"	f
free_node	srcs/utils/free_ast.c	/^void	free_node(t_ms_ast *ms_ast)$/;"	f
free_p_info	srcs/executor/ipc_with_pipe/ipc_table.c	/^void	free_p_info(t_process_info **p_info)$/;"	f
free_pipefd	srcs/executor/ipc_with_pipe/ipc_table.c	/^void	free_pipefd(int **pipefd, int process_cnt)$/;"	f
free_process_info	srcs/executor/ipc_with_pipe/ipc_table.c	/^void	free_process_info(t_process_info **proc_info_addr)$/;"	f
free_split	srcs/executor/exe_cmd/utils.c	/^void	free_split(char **ptr)$/;"	f
free_tokenize_info	srcs/lexer_and_parser/tokenize/error_tokenize.c	/^static void	free_tokenize_info(t_tokenize_info **t_info)$/;"	f	file:
free_twod_array	srcs/executor/single_builtin/single_builtin_redirection.c	/^void	free_twod_array(char **darray)$/;"	f
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_lstadd_back	libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f
ft_lstadd_front	libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f
ft_lstclear	libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void*))$/;"	f
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f
ft_lstlast	libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f
ft_lstnew	libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f
ft_lstsize	libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t n)$/;"	f
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *buf, int ch, size_t n)$/;"	f
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f
ft_result	libft/ft_split.c	/^static char	**ft_result(char const *s, char c, char **dst, size_t dbl_array)$/;"	f	file:
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f
ft_strcat	srcs/here_doc_input/get_next_line/get_next_line_utils.c	/^char	*ft_strcat(char *dest, char *src)$/;"	f
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dstsize)$/;"	f
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t dstsize)$/;"	f
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f
ft_x_calloc	srcs/utils/xalloc.c	/^void	*ft_x_calloc(size_t count, size_t size)$/;"	f
ft_x_split	srcs/utils/xalloc.c	/^char	**ft_x_split(const char *s, char c)$/;"	f
ft_x_strdup	srcs/utils/xalloc.c	/^void	*ft_x_strdup(const char *s1)$/;"	f
ft_x_strjoin	srcs/utils/xalloc.c	/^char	*ft_x_strjoin(const char *s1, const char *s2)$/;"	f
g_exit_status	srcs/main.c	/^int	g_exit_status = EXIT_SUCCESS;$/;"	v
get_absolute_path	srcs/executor/exe_cmd/no_builtin.c	/^static char	*get_absolute_path(char *str, char **split_path)$/;"	f	file:
get_all_paths	srcs/executor/ipc_with_pipe/get_cmd_path.c	/^static	char	**get_all_paths(t_info *info)$/;"	f	file:
get_end_quote	srcs/lexer_and_parser/tokenize/separator.c	/^void	get_end_quote(t_tokenize_info *t_info, char target)$/;"	f
get_filefd	pipex/execute_ipc2.c	/^int	get_filefd(t_info *info, int cmd_index)$/;"	f
get_here_doc	pipex/pipex.c	/^static void	get_here_doc(t_info *info)$/;"	f	file:
get_here_doc_init	pipex/pipex.c	/^static size_t	get_here_doc_init(t_info *info)$/;"	f	file:
get_here_doc_init	srcs/here_doc_input/here_doc_input.c	/^static size_t	get_here_doc_init(t_ms_ast *ms_ast, char *delimiter)$/;"	f	file:
get_home_value	srcs/executor/exe_cmd/cd.c	/^static char	*get_home_value(t_envlist *envlist)$/;"	f	file:
get_next_line	srcs/here_doc_input/get_next_line/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_path_index	pipex/cmd_full_path.c	/^static	int	get_path_index(t_info info)$/;"	f	file:
get_path_value	srcs/executor/exe_cmd/no_builtin.c	/^static char	*get_path_value(t_envlist *envlist)$/;"	f	file:
gnl_strjoin	srcs/here_doc_input/get_next_line/get_next_line_utils.c	/^char	*gnl_strjoin(char *s1, char *s2)$/;"	f
gnl_strlen	srcs/here_doc_input/get_next_line/get_next_line_utils.c	/^size_t	gnl_strlen(const char *str, int mode)$/;"	f
here_doc_pipe	srcs/executor/executor.h	/^	int		*here_doc_pipe;$/;"	m	struct:s_heredoc_info
here_doc_seqence	srcs/executor/ipc_with_pipe/ipc_executor.c	/^void	here_doc_seqence(t_info *info, t_process_info *proc_info)$/;"	f
here_doc_set	srcs/here_doc_input/here_doc_input.c	/^void	here_doc_set(t_ms_ast *ms_ast)$/;"	f
here_doc_set_table	srcs/here_doc_input/here_doc_input.c	/^static void	here_doc_set_table(t_ms_ast *cmd_node)$/;"	f	file:
hrdc_info	srcs/executor/executor.h	/^	t_heredoc_info	*hrdc_info;\/\/free$/;"	m	struct:s_process_info
in_fd	srcs/executor/executor.h	/^	int		in_fd;$/;"	m	struct:s_file_info
in_file	srcs/executor/executor.h	/^	bool	in_file;$/;"	m	struct:s_file_info
in_redirect	srcs/executor/executor.h	/^	int		in_redirect;$/;"	m	struct:s_file_info
init_info1	pipex/pipex.c	/^void	init_info1(t_info *info, int ac, char **av, char **ep)$/;"	f
init_info2	pipex/pipex.c	/^static void	init_info2(t_info *info)$/;"	f	file:
init_signal	srcs/signal/signal.c	/^void	init_signal(int sig_num, void (*func)(int not_use))$/;"	f
ipc_table	srcs/executor/ipc_with_pipe/ipc_table.c	/^int	ipc_table(t_ms_ast *ms_ast, t_envlist *envlist, size_t process_cnt)$/;"	f
is_double_redirect	srcs/lexer_and_parser/tokenize/token_checker.c	/^bool	is_double_redirect(t_tokenize_info *t_info)$/;"	f
is_env_key	srcs/executor/exe_cmd/export.c	/^static bool	is_env_key(char *str, t_envlist *envlist)$/;"	f	file:
is_equal	srcs/executor/exe_cmd/export.c	/^static bool	is_equal(char *str)$/;"	f	file:
is_full_path_case	pipex/cmd_full_path.c	/^static bool	is_full_path_case(t_info *info, int cmd_index)$/;"	f	file:
is_here_doc	includes/minishell.h	/^	bool			is_here_doc;$/;"	m	struct:s_ms_ast
is_here_doc	pipex/pipex.h	/^	bool	is_here_doc;$/;"	m	struct:s_info
is_here_doc	srcs/executor/executor.h	/^	bool			is_here_doc;$/;"	m	struct:s_process_info
is_here_doc	srcs/executor/executor.h	/^	bool	is_here_doc;$/;"	m	struct:s_heredoc_info
is_null	srcs/expander/expander_main.c	/^static void is_null(t_ms_ast **ms_ast)$/;"	f	file:
is_pipe	srcs/lexer_and_parser/make_ast/make_ast_exe.c	/^static bool	is_pipe(char ***all_cmd_line, t_make_ast_info *ma_info)$/;"	f	file:
is_quote	srcs/lexer_and_parser/tokenize/token_checker.c	/^bool	is_quote(t_tokenize_info *t_info)$/;"	f
is_single_redirect	srcs/lexer_and_parser/tokenize/token_checker.c	/^bool	is_single_redirect(t_tokenize_info *t_info)$/;"	f
is_some_redirect	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^static int	is_some_redirect(char *one_token)$/;"	f	file:
is_some_redirect	srcs/executor/single_builtin/sb_serch_redirection.c	/^static int	is_some_redirect(char *one_token)$/;"	f	file:
is_space	libft/ft_atoi.c	/^static bool	is_space(char c)$/;"	f	file:
is_space	srcs/executor/exe_cmd/exit.c	/^static bool	is_space(char c)$/;"	f	file:
is_valid_pre_string	srcs/lexer_and_parser/tokenize/tokenize.c	/^static bool	is_valid_pre_string(int line_index, char target)$/;"	f	file:
is_valid_pre_string	srcs/lexer_and_parser/tokenize/tokens_count.c	/^static bool	is_valid_pre_string(int line_index, char target)$/;"	f	file:
is_valid_start_file	pipex/valid_utils.c	/^bool	is_valid_start_file(t_info info)$/;"	f
is_valid_start_file	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^static bool	is_valid_start_file(char *file_name)$/;"	f	file:
is_valid_start_file	srcs/executor/single_builtin/sb_set_file.c	/^static bool	is_valid_start_file(char *file_name)$/;"	f	file:
key	includes/minishell.h	/^	char				*key;$/;"	m	struct:s_envlist
kind	srcs/lexer_and_parser/tmp/calculator.c	/^  NodeKind kind; \/\/ ノードの型$/;"	m	struct:Node	file:
last_section	srcs/lexer_and_parser/tokenize/tokens_count.c	/^static int	last_section(t_tokenize_info *t_info)$/;"	f	file:
left_node	includes/minishell.h	/^	struct s_ms_ast	*left_node;$/;"	m	struct:s_ms_ast	typeref:struct:s_ms_ast::s_ms_ast
lexer_and_parser	srcs/lexer_and_parser/lexer_and_parser_main.c	/^t_ms_ast	*lexer_and_parser(char *str, size_t *process_cnt)$/;"	f
lhs	srcs/lexer_and_parser/tmp/calculator.c	/^  Node *lhs;     \/\/ 左辺$/;"	m	struct:Node	file:
limiter	pipex/pipex.h	/^	char	*limiter;$/;"	m	struct:s_info
line	srcs/lexer_and_parser/lexer_and_parser.h	/^	char	*line;$/;"	m	struct:s_tokenize_info
line_index	srcs/lexer_and_parser/lexer_and_parser.h	/^	int		*line_index;$/;"	m	struct:s_tokenize_info
line_start_index	srcs/lexer_and_parser/lexer_and_parser.h	/^	int		*line_start_index;$/;"	m	struct:s_tokenize_info
list_clear	srcs/utils/free_ast.c	/^void	list_clear(t_list *list)$/;"	f
list_cnt	srcs/executor/exe_cmd/export.c	/^static size_t	list_cnt(t_envlist *envlist)$/;"	f	file:
list_to_darray	srcs/executor/exe_cmd/export.c	/^static char	**list_to_darray(t_envlist *envlist)$/;"	f	file:
lst_to_arr	srcs/executor/executor_utils.c	/^char	**lst_to_arr(t_list *arglst)$/;"	f
lst_to_arr	srcs/executor/ipc_with_pipe/get_cmd_path.c	/^char	**lst_to_arr(t_list *arglst)$/;"	f
lst_to_arr2	srcs/executor/exe_cmd/export.c	/^static char	**lst_to_arr2(char **rtn, t_envlist *envlist)$/;"	f	file:
lst_to_arr3	srcs/executor/exe_cmd/export.c	/^static int	lst_to_arr3(t_envlist **envlist, size_t *key_len, size_t *value_len)$/;"	f	file:
lst_to_arr4	srcs/executor/exe_cmd/export.c	/^static int	lst_to_arr4(size_t *i, char **rtn,$/;"	f	file:
main	pipex/pipex.c	/^int	main(int argc, char **argv, char **envp)$/;"	f
main	srcs/lexer_and_parser/tmp/calculator.c	/^int main(void)$/;"	f
main	srcs/main.c	/^int	main(int argc, char **argv, char **envp)$/;"	f
main	tester_dir/read_line.c	/^int main(void)$/;"	f
make_ast	srcs/lexer_and_parser/make_ast/make_ast_main.c	/^t_ms_ast	*make_ast(char ***all_cmd_line)$/;"	f
make_ast_exe	srcs/lexer_and_parser/make_ast/make_ast_exe.c	/^void	make_ast_exe(t_make_ast_info **ma_info, char ***all_cmd_line)$/;"	f
make_builtin_list	srcs/executor/executor_main.c	/^static void	make_builtin_list(char builtin_list[7][7])$/;"	f	file:
make_cmd_list	srcs/lexer_and_parser/make_ast/make_ast_exe.c	/^static t_list	*make_cmd_list(char ***all_cmd_line, t_make_ast_info *ma_info)$/;"	f	file:
make_pipe_line	srcs/lexer_and_parser/split_by_pipe/split_by_pipe.c	/^static int	make_pipe_line(char **tokenized_line, \\$/;"	f	file:
make_quote_line	srcs/lexer_and_parser/tokenize/separator.c	/^char	*make_quote_line(char *a_temp, char target)$/;"	f
make_result	srcs/here_doc_input/get_next_line/get_next_line.c	/^static char	*make_result(char **all)$/;"	f	file:
make_single_proc_line	srcs/lexer_and_parser/split_by_pipe/split_by_pipe.c	/^static int	make_single_proc_line(char **tokenized_line, \\$/;"	f	file:
ms_ast	includes/minishell.h	/^	t_ms_ast	*ms_ast;\/\/malloc$/;"	m	struct:s_info
ms_ast	srcs/lexer_and_parser/lexer_and_parser.h	/^	t_ms_ast	*ms_ast;$/;"	m	struct:s_make_ast_info
ms_lstadd_back	srcs/executor/exe_cmd/envlist.c	/^void	ms_lstadd_back(t_envlist **lst, t_envlist *element)$/;"	f
ms_lstlast	srcs/executor/exe_cmd/envlist.c	/^static t_envlist	*ms_lstlast(t_envlist *lst)$/;"	f	file:
ms_lstnew	srcs/executor/single_builtin/single_builtin_redirection.c	/^t_list	*ms_lstnew(char *content)$/;"	f
mul	srcs/lexer_and_parser/tmp/calculator.c	/^Node *mul() {$/;"	f
my_atol	srcs/executor/exe_cmd/exit.c	/^static long	my_atol(const char *str)$/;"	f	file:
my_cd	srcs/executor/exe_cmd/cd.c	/^int	my_cd(char **split_ln, t_envlist **envlist)$/;"	f
my_echo	srcs/executor/exe_cmd/echo.c	/^int	my_echo(char **split_ln)$/;"	f
my_echo	tester_dir/current_echo.c	/^int	my_echo(char **split_ln)$/;"	f
my_echo	tester_dir/origin_echo.c	/^int	my_echo(char **split_ln)$/;"	f
my_env	srcs/executor/exe_cmd/env.c	/^int	my_env(t_envlist *envlist)$/;"	f
my_exit	srcs/executor/exe_cmd/exit.c	/^int	my_exit(char **split_ln)$/;"	f
my_export	srcs/executor/exe_cmd/export.c	/^int	my_export(char **split_ln, t_envlist **envlist)$/;"	f
my_pwd	srcs/executor/exe_cmd/pwd.c	/^int	my_pwd(void)$/;"	f
my_strcmp	srcs/executor/exe_cmd/export.c	/^static int	my_strcmp(const char *s1, const char *s2)$/;"	f	file:
my_unset	srcs/executor/exe_cmd/unset.c	/^int	my_unset(char **split_ln, t_envlist **envlist) \/\/ このenvlistを渡すと元の値も変わる$/;"	f
nb_to_str	libft/ft_itoa.c	/^static void	nb_to_str(char *result, long long_nbr, unsigned int nb_digit,$/;"	f	file:
new_cmd_node	srcs/lexer_and_parser/make_ast/make_ast_exe.c	/^t_ms_ast	*new_cmd_node(char ***all_cmd_line, t_make_ast_info *ma_info)$/;"	f
new_node	srcs/lexer_and_parser/tmp/calculator.c	/^Node *new_node(NodeKind kind, Node *lhs, Node *rhs) {$/;"	f
new_node_num	srcs/lexer_and_parser/tmp/calculator.c	/^Node *new_node_num(int val) {$/;"	f
new_pipe_node	srcs/lexer_and_parser/make_ast/make_ast_exe.c	/^t_ms_ast	*new_pipe_node(t_make_ast_info *ma_info, t_ms_ast *right)$/;"	f
next	includes/minishell.h	/^	struct s_envlist	*next;$/;"	m	struct:s_envlist	typeref:struct:s_envlist::s_envlist
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
nextstrlen	libft/ft_split.c	/^static size_t	nextstrlen(char const *s, char c, size_t j)$/;"	f	file:
no_equal	srcs/executor/exe_cmd/export.c	/^static int	no_equal(char *str, t_envlist **envlist)$/;"	f	file:
not_a_valid_identifier	srcs/executor/exe_cmd/export.c	/^static void	not_a_valid_identifier(char *str)$/;"	f	file:
numeric_argument_required	srcs/executor/exe_cmd/exit_utils.c	/^void	numeric_argument_required(char *str)$/;"	f
only_builtin_assign_func	srcs/executor/single_builtin/single_builtin_executor.c	/^bool	only_builtin_assign_func(char builtin_list[7][7], \\$/;"	f
only_one_cmd	srcs/executor/exe_cmd/only_one_cmd.c	/^int	only_one_cmd(char **two_dim_arr, t_envlist **envlist)$/;"	f
out_fd	srcs/executor/executor.h	/^	int		out_fd;$/;"	m	struct:s_file_info
out_file	srcs/executor/executor.h	/^	bool	out_file;$/;"	m	struct:s_file_info
out_redirect	srcs/executor/executor.h	/^	int		out_redirect;$/;"	m	struct:s_file_info
path_exe	srcs/executor/exe_cmd/no_builtin.c	/^static int	path_exe(char **str, t_envlist *envlist)$/;"	f	file:
path_exe_main	srcs/executor/exe_cmd/no_builtin.c	/^static int	path_exe_main(char *absolute_path, char **str)$/;"	f	file:
pid	includes/minishell.h	/^	pid_t		*pid;\/\/malloc$/;"	m	struct:s_info
pid	pipex/pipex.h	/^	pid_t	*pid;$/;"	m	struct:s_info
pipe_section	srcs/lexer_and_parser/tokenize/tokens_count.c	/^static int	pipe_section(t_tokenize_info *t_info)$/;"	f	file:
pipe_separator	srcs/lexer_and_parser/tokenize/separator.c	/^bool	pipe_separator(t_tokenize_info *t_info)$/;"	f
pipefd	includes/minishell.h	/^	int			**pipefd;\/\/malloc$/;"	m	struct:s_info
pipefd	pipex/pipex.h	/^	int		**pipefd;$/;"	m	struct:s_info
pipex_putstr	pipex/error_handler.c	/^ssize_t	pipex_putstr(char *s, int fd)$/;"	f
pipex_putstr	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^ssize_t	pipex_putstr(char *s)$/;"	f
primary	srcs/lexer_and_parser/tmp/calculator.c	/^Node *primary() {$/;"	f
print_ast	srcs/lexer_and_parser/debug_utils/print_data.c	/^void print_ast(t_ms_ast *ms_ast)$/;"	f
print_error	srcs/executor/exe_cmd/utils.c	/^void	print_error(char *cmd, char *cmd_arg, int error_number)$/;"	f
print_export	srcs/executor/exe_cmd/export.c	/^static void	print_export(t_envlist *envlist)$/;"	f	file:
print_list	srcs/lexer_and_parser/debug_utils/print_data.c	/^static void print_list(t_list *list)$/;"	f	file:
print_sbp	srcs/lexer_and_parser/debug_utils/print_data.c	/^void	print_sbp(char ***sbp)$/;"	f
print_tokenized_line	srcs/lexer_and_parser/debug_utils/print_data.c	/^void	print_tokenized_line(char **tokenized_line)$/;"	f
process_cnt	includes/minishell.h	/^	int			process_cnt;\/\/no$/;"	m	struct:s_info
process_cnt	pipex/pipex.h	/^	int		process_cnt;$/;"	m	struct:s_info
quote_section	srcs/lexer_and_parser/tokenize/tokens_count.c	/^static int	quote_section(t_tokenize_info *t_info)$/;"	f	file:
quote_separator	srcs/lexer_and_parser/tokenize/separator.c	/^bool	quote_separator(t_tokenize_info *t_info)$/;"	f
read_sign	libft/ft_atoi.c	/^static int	read_sign(char c)$/;"	f	file:
read_sign	srcs/executor/exe_cmd/exit.c	/^static int	read_sign(char c)$/;"	f	file:
redirection_seqence	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^void	redirection_seqence(t_ms_ast *ast_node, t_process_info *proc_info, t_info *info)$/;"	f
remove_duplicate	srcs/executor/exe_cmd/export.c	/^void	remove_duplicate(char *str, t_envlist **envlist)$/;"	f
restore_redirection	srcs/executor/single_builtin/single_builtin_redirection.c	/^void	restore_redirection(t_process_info *proc_info)$/;"	f
result_init	srcs/lexer_and_parser/split_by_pipe/split_by_pipe.c	/^static void	result_init(char **tokenized_line, char ****result, size_t *proc_cnt)$/;"	f	file:
rhs	srcs/lexer_and_parser/tmp/calculator.c	/^  Node *rhs;     \/\/ 右辺$/;"	m	struct:Node	file:
right_node	includes/minishell.h	/^	struct s_ms_ast	*right_node;$/;"	m	struct:s_ms_ast	typeref:struct:s_ms_ast::s_ms_ast
s_envlist	includes/minishell.h	/^typedef struct s_envlist$/;"	s
s_file_info	srcs/executor/executor.h	/^typedef struct s_file_info$/;"	s
s_heredoc_info	srcs/executor/executor.h	/^typedef	struct s_heredoc_info$/;"	s
s_info	includes/minishell.h	/^typedef struct s_info$/;"	s
s_info	pipex/pipex.h	/^typedef struct s_info$/;"	s
s_list	libft/libft.h	/^typedef struct s_list$/;"	s
s_make_ast_info	srcs/lexer_and_parser/lexer_and_parser.h	/^typedef struct s_make_ast_info$/;"	s
s_ms_ast	includes/minishell.h	/^typedef	struct s_ms_ast$/;"	s
s_process_info	srcs/executor/executor.h	/^typedef struct s_process_info$/;"	s
s_tokenize_info	srcs/lexer_and_parser/lexer_and_parser.h	/^typedef struct s_tokenize_info$/;"	s
safe_free	srcs/executor/exe_cmd/utils.c	/^void	safe_free(char **ptr)$/;"	f
safe_func	pipex/safe_system_call.c	/^int	safe_func(int res, t_info *info)$/;"	f
safe_func	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^int	safe_func(int res, void *info)\/\/もとは(int res, t_info *info)$/;"	f
safe_func	srcs/lexer_and_parser/tmp/T_ipc_executor2.c	/^int	safe_func(int res, t_info *info)$/;"	f
safe_putstr_fd	srcs/executor/exe_cmd/echo.c	/^static int	safe_putstr_fd(char *s, int fd)$/;"	f	file:
safe_putstr_fd	tester_dir/current_echo.c	/^static int	safe_putstr_fd(char *s, int fd)$/;"	f	file:
safe_putstr_fd	tester_dir/origin_echo.c	/^static int	safe_putstr_fd(char *s, int fd)$/;"	f	file:
sb_set_heredoc	srcs/executor/single_builtin/sb_set_file.c	/^void	sb_set_heredoc(t_ms_ast *ast_node, t_process_info *proc_info)$/;"	f
sb_set_in_file	srcs/executor/single_builtin/sb_set_file.c	/^void	sb_set_in_file(t_process_info *proc_info, char *file_name)$/;"	f
sb_set_out_file	srcs/executor/single_builtin/sb_set_file.c	/^void	sb_set_out_file(t_process_info *proc_info, char *file_name, int redirect_type)$/;"	f
sec	srcs/lexer_and_parser/lexer_and_parser.h	/^	int			*sec;$/;"	m	struct:s_make_ast_info
section	srcs/executor/executor.h	/^	int				section;$/;"	m	struct:s_process_info
send_single_token	srcs/expander/expander_main.c	/^static void send_single_token(t_list **list)$/;"	f	file:
serch_redirection	srcs/executor/single_builtin/sb_serch_redirection.c	/^t_process_info	*serch_redirection(t_ms_ast *ms_ast)$/;"	f
set_cd_env	srcs/executor/exe_cmd/cd.c	/^static int	set_cd_env(char *oldpwd, t_envlist **envlist)$/;"	f	file:
set_elements	pipex/execute_ipc.c	/^static void	set_elements(t_info *info, int cmd_index)$/;"	f	file:
set_env	srcs/executor/exe_cmd/export.c	/^static int	set_env(char **split_ln, t_envlist **envlist)$/;"	f	file:
set_here_doc	srcs/here_doc_input/here_doc_input.c	/^void	set_here_doc(t_ms_ast *ms_ast, char *delimiter)$/;"	f
set_heredoc	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^static void	set_heredoc(t_ms_ast *ast_node, t_process_info *proc_info, char *delimiter)$/;"	f	file:
set_in_file	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^void	set_in_file(t_process_info *proc_info, char *file_name)$/;"	f
set_new_node	srcs/executor/exe_cmd/export.c	/^static int	set_new_node(char *str, t_envlist **envlist)$/;"	f	file:
set_oldpwd	srcs/executor/exe_cmd/cd.c	/^static int	set_oldpwd(char *oldpwd, t_envlist **envlist)$/;"	f	file:
set_out_file	srcs/executor/ipc_with_pipe/ipc_executor2.c	/^void	set_out_file(t_process_info *proc_info, char *file_name, int redirect_type)$/;"	f
set_pwd	srcs/executor/exe_cmd/cd.c	/^static int	set_pwd(t_envlist **envlist)$/;"	f	file:
sigint_after_rl	srcs/signal/signal.c	/^void	sigint_after_rl(int not_use)$/;"	f
sigint_before_rl	srcs/signal/signal.c	/^void	sigint_before_rl(int not_use)$/;"	f
sigquit_after_rl	srcs/signal/signal.c	/^void	sigquit_after_rl(int not_use)$/;"	f
single_builtin_only	srcs/executor/single_builtin/single_builtin_executor.c	/^static void	single_builtin_only(t_ms_ast *ms_ast, \\$/;"	f	file:
single_redirect_section	srcs/lexer_and_parser/tokenize/tokens_count.c	/^static int	single_redirect_section(t_tokenize_info *t_info)$/;"	f	file:
single_redirect_separator	srcs/lexer_and_parser/tokenize/separator.c	/^bool	single_redirect_separator(t_tokenize_info *t_info)$/;"	f
small_ipc_table	srcs/executor/ipc_with_pipe/ipc_table.c	/^void	small_ipc_table(t_info *info, t_ms_ast *ast_node, int i)$/;"	f
space_section	srcs/lexer_and_parser/tokenize/tokens_count.c	/^static int	space_section(t_tokenize_info *t_info)$/;"	f	file:
space_separator	srcs/lexer_and_parser/tokenize/separator.c	/^bool	space_separator(t_tokenize_info *t_info)$/;"	f
split_by_pipe	srcs/lexer_and_parser/split_by_pipe/split_by_pipe.c	/^char	***split_by_pipe(char **tokenized_line, size_t *process_cnt)$/;"	f
start_process	pipex/execute_ipc.c	/^int	start_process(t_info info)$/;"	f
t_envlist	includes/minishell.h	/^}	t_envlist;$/;"	t	typeref:struct:s_envlist
t_file_info	srcs/executor/executor.h	/^}	t_file_info;$/;"	t	typeref:struct:s_file_info
t_heredoc_info	srcs/executor/executor.h	/^}	t_heredoc_info;$/;"	t	typeref:struct:s_heredoc_info
t_info	includes/minishell.h	/^}	t_info;$/;"	t	typeref:struct:s_info
t_info	pipex/pipex.h	/^}	t_info;$/;"	t	typeref:struct:s_info
t_list	libft/libft.h	/^}		t_list;$/;"	t	typeref:struct:s_list
t_make_ast_info	srcs/lexer_and_parser/lexer_and_parser.h	/^}	t_make_ast_info;$/;"	t	typeref:struct:s_make_ast_info
t_ms_ast	includes/minishell.h	/^}	t_ms_ast;$/;"	t	typeref:struct:s_ms_ast
t_process_info	srcs/executor/executor.h	/^}	t_process_info;$/;"	t	typeref:struct:s_process_info
t_tokenize_info	srcs/lexer_and_parser/lexer_and_parser.h	/^}	t_tokenize_info;$/;"	t	typeref:struct:s_tokenize_info
tail_trim	srcs/here_doc_input/get_next_line/get_next_line.c	/^static char	*tail_trim(char *all, char **save)$/;"	f	file:
take_last_string	srcs/lexer_and_parser/tokenize/tokenize.c	/^static bool	take_last_string(t_tokenize_info *t_info)$/;"	f	file:
take_next_line	srcs/here_doc_input/get_next_line/get_next_line.c	/^static char	*take_next_line(char *save, int fd)$/;"	f	file:
take_pre_string	srcs/lexer_and_parser/tokenize/tokenize.c	/^bool	take_pre_string(t_tokenize_info *t_info)$/;"	f
tl_index	srcs/lexer_and_parser/lexer_and_parser.h	/^	int		*tl_index;$/;"	m	struct:s_tokenize_info
tmp_stdin	srcs/executor/executor.h	/^	int		tmp_stdin;$/;"	m	struct:s_file_info
tmp_stdout	srcs/executor/executor.h	/^	int		tmp_stdout;$/;"	m	struct:s_file_info
token_counter	srcs/lexer_and_parser/split_by_pipe/split_by_pipe.c	/^static int	token_counter(char **cmd_line_start)$/;"	f	file:
tokenize	srcs/lexer_and_parser/tokenize/tokenize.c	/^static char	**tokenize(t_tokenize_info *t_info)$/;"	f	file:
tokenize_main	srcs/lexer_and_parser/tokenize/tokenize.c	/^char	**tokenize_main(char *line)$/;"	f
tokenized_line	srcs/lexer_and_parser/lexer_and_parser.h	/^	char	**tokenized_line;$/;"	m	struct:s_tokenize_info
tokens_count	srcs/lexer_and_parser/tokenize/tokens_count.c	/^size_t  tokens_count(t_tokenize_info *t_info)$/;"	f
total_document	pipex/pipex.h	/^	char	*total_document;$/;"	m	struct:s_info
type	includes/minishell.h	/^	int				type;$/;"	m	struct:s_ms_ast
val	srcs/lexer_and_parser/tmp/calculator.c	/^  int val;       \/\/ kindがND_NUMの場合のみ使う$/;"	m	struct:Node	file:
value	includes/minishell.h	/^	char				*value;$/;"	m	struct:s_envlist
x_malloc	srcs/utils/xalloc.c	/^void	*x_malloc(size_t size)$/;"	f
